name: ChargePoint Waitlist Automation

on:
  schedule:
    # Primary + backup minute to fight GitHub's jitter
    - cron: "55 15 * * *"  # ~08:55 AM America/Los_Angeles during DST
    - cron: "56 15 * * *"  # backup
  workflow_dispatch:

concurrency:
  group: chargepoint-waitlist
  cancel-in-progress: false

jobs:
  run:
    runs-on: windows-latest

    env:
      CHARGEPOINT_EMAIL: ${{ secrets.CHARGEPOINT_EMAIL }}
      CHARGEPOINT_PASSWORD: ${{ secrets.CHARGEPOINT_PASSWORD }}
      CHARGEPOINT_STATION_NAME: ${{ secrets.CHARGEPOINT_STATION_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium tzdata

      # Gate: wait until 08:58 if early; if late, set should_run=false.
      - name: Gate until 08:58 America/Los_Angeles
        id: gate
        shell: python
        run: |
          import os, time, datetime
          from zoneinfo import ZoneInfo

          tz = ZoneInfo("America/Los_Angeles")
          now = datetime.datetime.now(tz)
          target = now.replace(hour=8, minute=58, second=0, microsecond=0)

          # If we already passed today's 08:58, don't run.
          should_run = True
          if now > target:
              print(f"Started at {now.isoformat()} but target {target.isoformat()} already passed.")
              should_run = False
          else:
              wait = (target - now).total_seconds()
              # Guard against absurd waits
              if wait > 7200:
                  print(f"Unexpected wait of {wait:.0f}s; will not run.")
                  should_run = False
              else:
                  print(f"Waiting {int(wait)}s until {target.isoformat()} (America/Los_Angeles)")
                  time.sleep(wait)
                  # Align to the exact second
                  while True:
                      now2 = datetime.datetime.now(tz)
                      if (now2 - target).total_seconds() >= 0:
                          break
                      time.sleep(0.05)
                  print(f"Reached {datetime.datetime.now(tz).isoformat()} â€” proceeding.")

          # Write output for next steps
          with open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8") as f:
              f.write(f"should_run={'true' if should_run else 'false'}\n")

      - name: Run waitlist script
        if: steps.gate.outputs.should_run == 'true'
        run: python waitlist_script.py
